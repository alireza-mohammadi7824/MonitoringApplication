[
  {
    "ContainingType": "MonitoringApplication.Controllers.AccountController",
    "Method": "Login",
    "RelativePath": "api/Account/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "MonitoringApplication.Models.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MonitoringApplication.Controllers.AccountController",
    "Method": "Register",
    "RelativePath": "api/Account/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "MonitoringApplication.Models.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MonitoringApplication.Controllers.ServiceGroupsController",
    "Method": "GetServiceGroups",
    "RelativePath": "api/ServiceGroups",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MonitoringApplication.Models.ServiceGroup, MonitoringApplication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MonitoringApplication.Controllers.ServiceGroupsController",
    "Method": "PostServiceGroup",
    "RelativePath": "api/ServiceGroups",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "serviceGroup",
        "Type": "MonitoringApplication.Models.ServiceGroup",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MonitoringApplication.Models.ServiceGroup",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MonitoringApplication.Controllers.ServiceGroupsController",
    "Method": "DeleteServiceGroup",
    "RelativePath": "api/ServiceGroups/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MonitoringApplication.Controllers.ServicesController",
    "Method": "GetServices",
    "RelativePath": "api/Services",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MonitoringApplication.Models.MonitoredService, MonitoringApplication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MonitoringApplication.Controllers.ServicesController",
    "Method": "PostMonitoredService",
    "RelativePath": "api/Services",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "MonitoringApplication.Models.CreateUpdateServiceDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MonitoringApplication.Models.MonitoredService",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MonitoringApplication.Controllers.ServicesController",
    "Method": "PutMonitoredService",
    "RelativePath": "api/Services/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "MonitoringApplication.Models.CreateUpdateServiceDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MonitoringApplication.Controllers.ServicesController",
    "Method": "DeleteMonitoredService",
    "RelativePath": "api/Services/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MonitoringApplication.Controllers.ServicesController",
    "Method": "GetServiceDetails",
    "RelativePath": "api/Services/{id}/details",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MonitoringApplication.Models.ServiceDetailsDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MonitoringApplication.Controllers.ServicesController",
    "Method": "ValidateService",
    "RelativePath": "api/Services/validate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "MonitoringApplication.Models.ValidateServiceRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MonitoringApplication.Models.ValidateServiceResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MonitoringApplication.Controllers.TestApiController",
    "Method": "GetFlakyStatus",
    "RelativePath": "api/TestApi/flaky-status",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MonitoringApplication.Controllers.TestApiController",
    "Method": "GetStatus",
    "RelativePath": "api/TestApi/status",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  }
]